# Generated by Django 2.1.2 on 2018-11-15 10:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sport', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('manner', models.IntegerField()),
                ('skill', models.IntegerField()),
                ('comment', models.TextField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('p1_approval', models.NullBooleanField(default=None)),
                ('p2_approval', models.NullBooleanField(default=None)),
                ('start_time', models.DateTimeField()),
                ('status', models.IntegerField(choices=[(0, 'open'), (1, 'matched'), (2, 'playing'), (3, 'finish')], default=0)),
                ('created_at', models.DateTimeField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Location')),
                ('loser', models.ManyToManyField(related_name='loser', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestMatch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('note', models.TextField(blank=True, default='', max_length=200, null=True)),
                ('status', models.IntegerField(choices=[(0, 'finding'), (1, 'found'), (2, 'pause')], default=0)),
                ('with_similar_level', models.BooleanField(default=False)),
                ('with_same_sex', models.BooleanField(default=False)),
                ('with_far', models.BooleanField(default=False)),
                ('show_personal_info', models.BooleanField(default=False)),
                ('show_match_records', models.BooleanField(default=False)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Location')),
                ('sport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Sport')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='p1_request',
            field=models.ManyToManyField(related_name='p1_request', to='match.RequestMatch'),
        ),
        migrations.AddField(
            model_name='match',
            name='p2_request',
            field=models.ManyToManyField(related_name='p2_request', to='match.RequestMatch'),
        ),
        migrations.AddField(
            model_name='match',
            name='player1',
            field=models.ManyToManyField(related_name='player1', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='match',
            name='player2',
            field=models.ManyToManyField(related_name='player2', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='match',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sport.Sport'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ManyToManyField(related_name='winner', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='match.Match'),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='target',
            field=models.ManyToManyField(related_name='evaluated_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='evaluation',
            name='writer',
            field=models.ManyToManyField(to=settings.AUTH_USER_MODEL),
        ),
    ]
